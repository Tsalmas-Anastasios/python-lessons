# μπορούμε να δημιουργούμε και dictionary comprehensions (όπως και με μία λίστα),
# από άλλα λεξικά ή από το μηδέν
#
# γενική σύνταξη του dictionary comprehension:
#   λεξικό_εξόδου = { κλειδί¨τιμή for κλειδί in iterable if (κλειδί, τιμή που
#                       ικανοποιεί την συνθήκη)}
#
#
#
# Παραδείγματα------------------------------------
#
# Παράδειγμα Νο. 1
# Θέλουμε να δημιουργήσουμε ένα λεξικό το οποίο περιέχει μόνο περιττούς αριθμούς
# σαν κλειδιά και τους κύβους τους σαν τιμές
input_list = [i for i in range(1, 8)]
output_dict = {}

# 1ος τρόπος: χρήση βρόχου
for var in input_list:
    if var % 2 != 0:
        output_dict[var] = var ** 3

# 2ος τρόπος: iterable
output_dict = {var:var ** 3 for var in input_list if var % 2 != 0}

# Παράδειγμα Νο. 2
# Μας δίνονται δύο λίστες, η μια από τις οποίες περιέχει τους νομούς και η άλλη
# τις πρωτεύουσες των νομών αντίστοιχα. Σχηματίστε ένα λεξικό το οποίο αποθηκεύει
# τους νομούς με τις αντίστοιχες πρωτεύουσές τους
state = ['Αττική', 'Λέσβος', 'Πιερία']
capital = ['Αθήνα', 'Μυτιλήνη', 'Κατερίνη']
output_dict = {}

# 1ος τρόπος: for loop
for (key, value) in zip(state, capital):
    output_dict[key] = value

# 2ος τρόπος: iterable
output_dict = {key:value for (key,value) in zip(state, capital)}

print("Το λεξικό είναι:", output_dict)

# Παράδειγμα Νο. 3
# Αντικαταστήστε κάθε τιμή του λεξικού με τη λέξη 'Odd' αν η τιμή είναι περιττός
# αριθμός, ή 'Not Odd' αν είναι ζυγός αριθμός
dict1 = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6}
res = {k:('Not odd' if v %2 == 0 else 'Odd') for (k,v) in dict1.items()}
    # εδώ χρειάζεται και η συνάρτηση items(), αλλιώς θα παρατηρήσουμε σφάλμα κατά
    # την έξοδο
print(res)

# Παράδειγμα Νο. 4
# Δημιουργία λεξικού με κλειδιά που είναι γράμματα του αλφαβήτου και αύξοντες
# αριθμούς σαν τιμές. Για να πάρουμε τα abcde χρειαζόμαστε την έκφραση:
import string
newDict = {i:j for (i, j) in zip(string.ascii_lowercase[:5], range(5))}

# Παράδειγμα νο. 5
# Η dic.items() επιστρέφει όλη τη δομή ενός λεξικού με κλειδιά και τιμές.
# Στο παρακάτω παράδειγμα πολλαπλασιάζουμε τις τιμές ενός υπαρκτού λεξικού με το 2
# και παίρνουμε ένα νέο λεξικό new_dic (όπως κάναμε και με τις λίστες παραπάνω)
dic = {'a': 1, 'b': 2, 'c': 3, 'd': 4}
new_dic = {i:j * 2 for i, j in dic.items()}
print(new_dic)

# Παράδειγμα Νο. 6
# Μετατροπή κιλών σε pounds σε ζευγάρια τιμών στο λεξικό:
old_weights = {
    'book': 0.5,
    'milk': 2.0,
    'tv': 7.0
}
new_weights = {key: value * 2 for (key, value) in old_weights.items()}
print(new_weights)