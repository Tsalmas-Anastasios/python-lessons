# Δημιουργία παραθύρου στο Tkinter
#
#
# Με τον παρακάτω κώδικα εμφανίζουμε ένα παράθυρο στην οθόνη:
import tkinter as tk

root = tk.Tk()
root.mainloop()

#
# Πώς δουλεύει
# ------------
# Πρώτα εισάγουμε το module tkinter ως tk στο πρόγραμμα με τον
# ακόλουθο τρόπο:
#           import tkinter as tk
#
# Δημιουργούμε ένα στιγμιότυπο της κλάσης tk.Tk που θα δημιουργήσει
# το παράθυρο root της εφαρμογής:
#           root = tk.Tk()
#
# Κατά σύμβαση, το κύριο παράθυρο στο Tkinter ονομάζεται root. Αλλά
# μπορούμε να χρησιμοποιήσουμε οποιοδήποτε άλλο όνομα όπως main.
#
#
# Καλούμε τη μέθοδο mainloop() του αντικειμένου του κύριου παραθύρου:
#           root.mainloop()
#
# H mainloop() διατηρεί το παράθυρο ορατό στην οθόνη. Εάν δεν καλέσουμε
# τη μέθοδο mainloop() το παράθυρο θα εμφανιστεί και θα εξαφανιστεί αμέ-
# σως.
#
# Επίσης η μέθοδος mainloop() διατηρεί να εμφανίζεται και να λειτουργεί
# μέχρι να το κλείσουμε
#
# Συνήθως, καλούμε τη μέθοδο mainloop() στο τέλος, μετά τη δημιουργία των
# γραφικών στοιχείων.
#
#
#
#
#


# Εισαγωγή widget στο παράθυρο
#
#
# Στο Tkinter, τα αντικείμενα ονομάζονται widgets.
#
# Για να προσθέσουμε μια ετικέτα (label) στο παράθυρο, πληκτρολογούμε:
import tkinter as tk
root = tk.Tk()

message = tk.Label(root, text="Hello World")            # Τοποθέτηση ετικέτας - label στο root window
message.pack()

root.mainloop()         # Συνεχής εμφάνιση του παραθύρου

# Πώς δουλεύει:
# -------------
# Για να δημιουργήσουμε ένα γραφικ´πο στοιχείο που ανήκει σε ένα container, χρησιμοποιούμε
# την ακόλουθη σύνταξη:
#               widget = Όνομα γραφικού στοιχείο(container, **options)
#
# Το κοντέινερ είναι το γονικό παράθυρο ή πλαίσιο όπου θέλουμε να τοποθετήσουμε τογραφικό
# στοιχείο.
#
# Οι επιλογές (options) είναι ένα ή περισσότερα ορίσματα λέξεων - κλειδιών που καθορίζουν 
# τις διαμορφώσεις του γραφικού στοιχείο.
#
# Στο πρόγραμμα, τα ακόλουθα δημιουργούν ένα γραφικό στοιχείο Label που τοποθετείται στο
# παράθυρο root:
#               message = tk.Label(root, text="Hello World")
#
# Και η ακόλουθη δήλωση τοποθετεί την ετικέτα στο παράθυρο root:
#               message.pack()
#
# Εάν δεν καλέσουμε τη μέθοδο pack(), το Tkinter εξακολουθεί να δημιουργεί το γραφικό
# στοιχείο. Ωστόσο, το widget είναι αόριστο.
#
#
#
#
#


# Χαρακτηριστικά του παραθύρου
#
# Το παράθυρό μας έχει ένα τίτλο ο οποίος έχει σαν προεπιλεγμένη τιμή 'tk'. Επίσης, έχει
# τρία κουμπιά συστήματος: Ελαχιστοποίηση, μεγέθυνση και κλείσιμο.
# Ας δούμε πως αλλάζουμε τα χαρακτηριστικά του παραθύρου.,
# Μπορούμε να χρησιμοποιήσουμε τη μέθοδο title()Q
#               window.title()
#
#  Παράδειγμα
import tkinter as tk
root = tk.Tk()
root.title('Our first window')
root.mainloop()



# Αλλαγή μεγέθους και τοποθεσίας του παραθύρου
#
# Στο Tkinter, το μέγεθος και η τοποθεσία του παραθύρου καθορίζεται από γεωμετρικά χαρακτη-
# ριστικά τα οποία δηλώνουμε ως εξής:
#       width x height +- x +- y
#       window.geometry('width x height + x + y')
#
#           - Το width είναι το πλάτος του παραθύρου σε pixels
#           - Το height είναι το ύψος του παραθλυρου σε pixels
#           - Το x είναι η οριζόντια θέση του παραθύρου. Για παράδειγμα, +50 σημαίνει ότι η
#             αριστερή άκρη της οθόνης και - 50 σημαίνει, 'οτι η δεξιά άκρη του παραθύρου θα
#             πρέπει να είναι 50 pixels από τη δεξιά άκρη της οθόνης
#           - Το y είναι η κάθετη θέση του παραθύρου. Για παράδειγμα, +50 σημαίνει ότι το πάνω
#             μέρος του παραθύρου πρέπει να είναι 50px κάτω από το πάνω μέρος και -50 σημαίνει,
#             ότι η κάτω άκρη του παραθύρου θα πρέπει να είναι 50 pixels πάνω από το κάτω μέρος
#             της οθόνης.
# Για να αλλάξουμε το μέγεθος και τη θέση του παραθύρου χρησιμοποιούμε τη μέθοδο geometry():
#           window.geometry(new_geometry)
#
# Στο παρακάτω παράδειγμα αλλάζουμε το μέγεθος του παραθύρου σε 600 x 400 και τη θέση του παρα-
# θύρου σε 50px από επάνω και από αριστερά της οθόνης:
import tkinter as tk
root = tk.Tk()
root.title('Our first window')
root.geometry('600x400+50+50')
root.mainloop()

# Κάποιες φορές θέλουμε να κεντράρουμε το παράθυρο στην οθόνη:
import tkinter as tk

root = tk.Tk()
root.title('Tkinter Window - Center')
window_width = 300
window_height = 200

# Παίρνουμε το μέγεθος της οθόνης
screen_width = root.winfo_screenwidth()
screen_height = root.winfo_screenheight()

# Βρίσκουμε  το κέντρο της οθόνης
center_x = int(screen_width / 2 - window_height / 2)
center_y = int(screen_height / 2 - window_height / 2)

# Κεντράρισμα
root.geometry(f'{window_width}x{window_height}+{center_x}+{center_y}')

root.mainloop()


#
# Για να εμποδίσουμε το παράθυρο να αλλάζει μέγεθος, μπορούμε να χρησιμοποιήσουμε τη μέθοδο
# resizable()
#               window.resizable(width, height)
#
# Έχει δύο παραμέτρους οι οποίες καθορίζουν αν το πλάτος και το ύψος του παραθύρου μποορούν
# να αλλάξουν μέγεθος
# Επομένως, για παράθυρο με σταθερό μέγεθος έχουμε:
import tkinter as tk

root = tk.Tk()
root.title('Το πρώτο μου Παράθυρο')
root.geometry('600x400+50+50')
root.resizable(False, False)

root.mainloop()

# Όταν ένα παράθυρο αλλάζει μέγεθος, μπορούμε να καθορίσουμε το ελάχιστο και μέγιστο μέγεθος
# χρησιμοποιώντας τις μεθόδους minsize() και maxsize()
#               window.minsize(min_width, min_height)
#               window.maxsize(max_width, max_height)
#
#
#




# Διαφάνεια
# ---------
# Το Tkinter μας επιτρέπει να καθορίζουμε τη διαφάνεια ενός παραθύρου ρυθμίζοντας το κανάλι
# άλφα του να κυμαίνεται από 0,0 (πλήρως διαφανές) έως 1,0 (πλήρως αδειαφανές):
#               window.attributes('-alpha', 0,5)
#
# Το ακόλουθο παράδειγμα απεικονίζει ένα παράθυρο με 50% διαφάνεια:
import tkinter as tk

root = tk.Tk()
root.title('Our first window')
root.geometry('600x400+50+50')
root.resizable(False, False)
root.attributes('-alpha', 0,5)

root.mainloop()






# Σειρά στοίβαξης παραθύρων
# -------------------------
# Η σειρά στοίβαξης των παραθύρων αναφέρεται στη σειρά των παραθύρων που τοποθετούνται από κάτω
# προς τα πάνω. Το πιο κοντινό παράθυρο βρίσκεται στο επάνω μέρος της στοίβας και επικαλύπτει το
# χαμηλότερο.
#
# Για να διασφαλίσουμε ότι ένα παράθυρο βρίσκεται πάντα στην κορυφή της στοίβαξης, μπορούμε να 
# χρησιμοποιήσουμε το χαρακτηριστικό -topmost ως εξής
#               window.attributes('-topmost', 1)
#
# Για να μετακινήσουμε ένα παράθυρο πάνω ή κάτω της στοίβας, μπορούμε να χρησιμοποιήσουμε τις
# μεθόδους lift() και low()
#               window.lift()
#               window.list(another_window)
#
#               window.lower()
#               window.lower(another_window)
#
#
# Το παρκάτω παράδειγμα τοποθετεί το παράθυρο root πάνω από όλα τα άλλα παράθυρα. Με άλλα λόγια,
# το παράθυρο root είναι πάντα στην κορυφή:
import tkinter as tk

root = tk.Tk()
root.title('Tkinter Window Demo')
root.geometry('300x200+50+50')
root.resizable(0, 0)
root.attributes('-topmost', 1)

root.mainloop()





# Αλλαγή του προεπιλεγμένου εικονιδίου
# ------------------------------------
# Το παράθυρο του Tkinter εμφανίζει ένα προεπιλεγμένο εικονίδιο. Για να αλλάξουμε αυτό το εικονίδιο
#   1. Προετοιμάζουμε μια εικόνα σε μορφή .ico. Εάν έχουμε την εικόνα σε άλλες μορφές όπως png ή
#      jpg, θα χρειαστεί να τη μετατρέψουμε σε μορφή .ico (μπορούμε να το κάνουμε στο διαδίκτυο)
#   2. Τοποθετούμε το εικονίδιο σε ένα φάκελο που είναι προσβάσιμος από το πρόγραμμα και καλούμε τη
#      μέθοδο iconbitmap() του παραθύρου.
#
# Ας δούμε παρακάτω:
import tkinter as tk

root = tk.Tk()
root.title('Το Πρώτο μου Παράθυρο')
root.geometry('300x200+50+50')
root.resizable(False, False)
root.iconbitmap('D:\Cookoo_Home\Documents\Ευδόκιμος\Παρουσιάσεις Μαθήματος Python\python_new.ico')

root.mainloop()