# Ιδιότητες των κλάσεων
#
#
# Τώρα που έχουμε μια βασική κατανόηση των κλάσεων και των αντικειμένων
# ας προχωρήσουμε στις ιδιότητες.
#
# Σε προηγούμενα παραδείγματα, παρατηρούμε ότι μπορούμε να αποκτήσουμε
# πρόσβαση στις μεταβλητές στιγμιοτύπου ενός αντικειμένου χρησιμοποιώντας
# τον τελεστή τελείας.
# Αυτό μας διευκολύνει να διαβάσουμε τις μεταβλητές και να τις τροποποιήσουμε
# όταν χρειάζεται.
# Ωστόσο, η ευελιξία προκαλεί κάποια προβλήματα. Για παράδειγμα, μπορεί να αλλάξουμε
# ακούσια τη θέση του officeStaff1 σε μια μη υπαρκτή θέση. Ή μπορεί να αλλάξουμε τον
# μισθό του officeStaff1 σε λανθασμένο ποσό.
# 
# Για να αποτρέψουμε τέτοια σφάλματα, μπορούμε να χρησιμοποιήσουμε ιδιότητες. Οι ιδιό-
# τητες μας παρέχουν έναν τρόπο για να ελέγξουμε τις τιμές των αλλαγών που θέλουμε να
# πραγματοποιήσουμε πριν να επιτρέψουμε την αλλαγή να συμβεί.
#
# Για να δείξουμε πώς λειτουργούν οι ιδιότητες, θα προσθέσουμε μια για τη μεταβλητή
# "θέση".
#
# Συγκεκριμένα, θα προσθέσουμε μια ιδιότητα για να διασφαλίσουμε ότι η μεταβλητή "θέση"
# μπορεί να οριστεί μόνο σε "Βασική" 'η "Διευθυντή".
#
# Ωστόσο, πριν το κάνουμε αυτό, θέλουμε να αλλάξουμε το όνομα της μεταβλητής στιγμιοτύπου
# από θέση (position) σε _position.
#
# Η προσθήκη μιας μόνο κάτω παύλας μπροστά από το όνομα μιας μεταβλητής είναι ένας συμβατικός
# τρόπος να ενημερώσουμε άλλους προγραμματιστές ότι δεν πρέπει να αγγίζουν αυτήν τη μεταβλητή
# απευθείας.
#
# Στην Python, υπάρχει μια συνήθης φράση που λέει "είμαστε όλοι συναινούντες ενήλικες εδώ".
# Αναμένεται από όλους να συμπεριφερόμαστε ως ενήλικες.
#
# Η προσθήκη μιας μόνο κάτω παύλας μπροστά από μια μεταβλητή λέει σε άλλους προγραμματιστές
# ότι εμπιστευόμαστε ότι θα συμπεριφερθούν υπεύθυνα και δεν θα έχουν πρόσβαση σε αυτήν την 
# μεταβλητή απευθείας εκτός εάν έχουν έναν πειστικό λόγο.
#
# Παρ' όλα αυτά, τεχνικά, δεν τους εμποδίζει τίποτα από το να έχουν πρόσβαση σε αυτήν την
# μεταβλητή. Εάν το επιθυμούν, μπορούν ακόμα να την προσπελάσουν γράφοντας
#                            officeStaff1._position
#
# Λαμβάνοντας αυτό υπόψη, ας κάνουμε τις εξής αλλαγές στο αρχείο classdemo.py για να
# ενημερώσουμε τους υπόλοιπους "συναινούντες ενήλικες" ότι δεν πρέπει να έχουν πρόσβαση στη
# θέση (position) απευθείας:
#
#   Αλλαγή της γραμμής self.position = pPosition
#       στην __init__ σε self._position = pPositon
#   και της γραμμής return "Position = %s, Name = %s, Pay = %d" %(self.position, self.name, self.pay)
#       της μεθόδου __str__ σε return "Position = %s, Name = %s, Pay = %d" %(self._position, self.name, self.pay)
#
# Στη συνέχεια, ας δούμε πώς να προσθέσουμε μια ιδιότητα για τη μεταβλητή _position:
# Προσθέτουμε τις παρακάτω γραμμές στην κλάση Staff στο αρχείο classdemo.py
@property
def position(self):
    print("Getter Method")
    return self._position

@position.setter
def position(self, value):
    if value == 'Διευθυντής' or value == 'Βασική':
        self._position = value
    else:
        print('Η θέση είναι άκυρη. Δεν έγιναν αλλαγές.')
        
        
        

#
#
# H πρώτη γραμμή παραπάνω (@property) ονομάζεται διακοσμητής (decorator). Δεν θα αναλυθούν λεπτομέρειες
# για το τι είναι ένας διακοσμητής, απλά αυτό που κάνει είναι να μας επιτρέπει να αλλάξουμε τη λειτουργι-
# κότητα της μεθόδου που ακολουθεί. Σε αυτήν την περίπτωση, αλλάζει την πρώτη μέθιοδο position() σε μια
# ιδιότητα. Αυτό σημαίνει ότι λέμε στον μεταγλωττιστή ότι όταν οι χρήστες πληκτρολογούν:
#           officeStaff1.position
# θα πρέπει να χρησιμοποιεί την μέθοδο position() που ακολουθεί για να πάρει την τιμή. Αυτή η μέθοδος απλά
# εκτυπώνει το μήνυμα "Getter Method" και επιστρέφει την τιμή της μεταβλητής _position.
#
# Λόγω του διακοσμητή @property που μετατρέπει τη μέθοδο σε ιδιότητα, δεν χρειάζεται να πληκτρολογήσουμε
# officeStaff1.position() για να έχουμε πρόσβαση στη μέθοδο. Την προσπελαύνουμε όπως μια μεταβλητή χωρίς
# τις παρενθέσεις.
#
# Στη συνέχεια, έχουμε έναν άλλο διακοσμητή @position.setter ακολουθούμενο από μια δεύτερη μέθοδο position().
#
# Αυτός ο διακοσμητής λέει στο μεταγλωττιστή ότι όταν οι χρήστες προσπαθούν να ενημερώσουν την τιμή του
# _position γράφοντας κάτι σας
#                   officeStaff1.position = 'Διευθυντής'
# θα πρέπει να χρησιμοποιήσει τη μέθοδο position() που ακολουθεί για να ενημερώσει την τιμή.
#
# Αυτλή η δεύτερη μέθοδος position() ονομάζεται μέθοδος ρύθμισης (setter method). Διαθέτει μια παράμετρο με
# το όνομα value που αντιστοιχεί στη μεταβλητή _position, εφόσον η τιμή είναι είτε 'Διευθυντής' είτε 'Βασική'.
#
# Εάν η τιμή δεν είναι καμία από αυτές, εμφανίζεται το μήνυμα "Η θέση είναι άκυρη. Δεν έγιναν αλλαγές"