Write
-----

print("Lesson 9")
print("Lesson object: file management (.txt files & more) - write")

# open the .txt file
f = open('myfile.txt', 'w')         # --> open the requested file
        # open() function:
            # two arguments: 1. the file path
            #                2. the open mode ('w'->write, 'r'->read)
            #
            #
            # Αν το αρχείο που επιθυμούμε να ανοίξουμε υπάρχει ήδη, τότε τα δεδομένα του
            # αρχείου αυτού διαγράφονται-σβήνονται και στην συνέχεια δημιουργούνται οι
            # νέες εγγραφές. (τα παλιά δεδομένα, αντικαθίστατε από τα νέα)
            #
            # Αν το αρχείο δεν υπάρχει, τότε απλά δημιουργείται και είναι ετοίμο για να
            # γράψουμε δεδομένα σε αυτό.
            #
            # Το path που χρησιμοποιύμε στην συνάτρτηση προκειμένου να ανοίξουμε το αρχείο,
            # πρέπει να προϋπάρχει, διαφορετικά θα εμφανιστεί μήνυμα λάθους. Δεν αναφερόμα-
            # στε στην τελική κατάληξη, που είναι το αρχείο, αλλά στο υπόλοιπο μονοπάτι.



line1 = 'Σ\' αυτό το μάθημά μας θα διαχειριστούμε αρχεία κειμένου\n'
f.write(line1)          # write new line in the end of the opened file

line2 = '(text files), τα οποία δεν είναι τίποτε άλλο παρά\n'
f.write(line2)          # write new line (line2) in the end of the opened file

line3 = 'μια σειρά από χαρακτήρες (συμβολοσειρές) που είναι\n'
f.write(line3)          # write new line (line3) in the end of the opened file

line4 = 'αποθηκευμένοι σε ένα μόνιμο μέσο αποθήκευσης.\n'
f.write(line4)          # write new line (line4) in the end of the opened file

# Συνάρτηση write
# Με τη μέθοδο αυτή μπορούμε να γράψουμε δεδομένα σε ένα αρχείο ή σε ένα αντικείμενο
# αρχείου που δημιουργέιται από την συνάρτηση open
# Το/Τα ορίσματά της, θα πρέπει να ειναι συμβολοσειρές. Έτσι, αν θέλουμε να γράψουμε
# ένα δεδομένο που να έχει διαφορετικό τύπο από string, θα πρέπει πρώτα να το μετατρέ-
# ψουμε σε string (χρησιμοποιώντας τις τεχνικές casting) και στην συνέχεια να εγγράψουμε
# αυτή την τιμή στο αρχείο.

f.close()               # --> close the file that we opened it before
# Η συνάρτηση close() χρησιμοποιείται για να κλείσουμε ένα αρχείο. Αυτό δηλώνει ότι,
# η επεξεργασία του έχει ολοκληρωθεί και δεν θα χρειαστούμε άλλο να το επεξεργασοτούμε,
# είτε να το αναγνώσουμε είτε να εγγράψουμε κάτι σε αυτό.



Read
----
print("Lesson 9")
print("Lesson object: file management (.txt files & more) - write")

# open the .txt file
f = open('myfile.txt', 'r')         # --> open the requested file
        # open() function:
            # two arguments: 1. the file path
            #                2. the open mode ('w'->write, 'r'->read)
            #
            #
            # Αν το αρχείο που επιθυμούμε να ανοίξουμε υπάρχει ήδη, τότε τα δεδομένα του
            # αρχείου αυτού διαγράφονται-σβήνονται και στην συνέχεια δημιουργούνται οι
            # νέες εγγραφές. (τα παλιά δεδομένα, αντικαθίστατε από τα νέα)
            #
            # Αν το αρχείο δεν υπάρχει, τότε απλά δημιουργείται και είναι ετοίμο για να
            # γράψουμε δεδομένα σε αυτό.
            #
            # Το path που χρησιμοποιύμε στην συνάτρτηση προκειμένου να ανοίξουμε το αρχείο,
            # πρέπει να προϋπάρχει, διαφορετικά θα εμφανιστεί μήνυμα λάθους. Δεν αναφερόμα-
            # στε στην τελική κατάληξη, που είναι το αρχείο, αλλά στο υπόλοιπο μονοπάτι.

firstline = f.readline()
secondline = f.readline()
    # readline() function
    # Χρησιμοποιείται για να διαβάσει μία γραμμή από το αρχείο που έχει ανοιχτεί στην
    # μεταβλητή f.
    # Κάθε φορά που καλείται, διαβάζεται η επόμενη σειρά, η ανάγνωση ξεκινάει από την πρώτη
    # γραμμή του αρχείου και μπορεί να φτάσει μέχρι το τέλος, με το κάθε κάλεσμά της να 
    # δείχνει σε παρακάτω γραμμή (n + 1 row)
    # Η συνάρτηση readline, προσθέτει έναν χαρακτήρα διαφυγής '\n' στο τέλος κάθε γραμμής.
    # Αν δεν θέλουμε αυτή την προσθήκη στο τέλος κάθε γραμμής, μπορούμε να το δηλώσουμε
    # γράφοντας στην συνάρτηση print --> print(firstline, end=''). Αυτό θα αφαιρέσει τους
    # χαρακτήρες '\n' που πιθανώς θα υπάρχουν στο τέλος κάθε γραμμής που έχει διαβαστεί.


print(firstline)
print(secondline)

f.close()



Modes για το άνοιγμα ενός αρχείου
---------------------------------

    - 'r' --> άνοιγμα μόνο για ανάγνωση (συχνά χρησιμοποιούμενο)
    - 'w' --> άνοιγμα μόνο για εγγραφή. Αν το συγκεκριμένο αρχείο δεν υπάρχει τότε θα 
              δημιουργηθεί. Αν το συγκεκριμένο αρχείο υπάρχει, οτιδήποτε υπάρχει μέσα θα
              διαγραφεί. (συχνά χρησιμοποιούμενο)
    - 'a' --> για προσθήκη κειμένου. Αν το συγκεκριμένο αρχείο δεν υπάρχει, θα δημιουργηθ-
              εί. Αν υπάρχει, οτιδήποτε υπάρχει μέσα θα προστεθεί στο τέλος του αρχείου.
    - 'r+' --> για γραφή και για ανάγνωση
    - 'x' --> δημιουργεί ένα αρχείο και επιστρέφει λάθος αν ήδη υπάρχει.


Διάβασμα ενός αρχείου:
----------------------

    - Γραμμικό διάβασμα ενός αρχείου (χωρίς επαναληπτική δομή):
        .readline() διαβάζει την τρέχουσα γραμμή και στην συνέχεια δηλώνει ως τρέχουσα την
        επόμενη γραμμή του αρχείου.
    - Διάβασμα ολόκληρου του αρχείου γραμμή-γραμμή
        χρήση ενός επαναληπτικού βρόχου, συγκεκριμένα χρήση ενός for loop:
            for line in file_opened:
                # edit here the line of the file
                # for example, print it
                print(line, end = '')
    - Ανάγνωση αρχείου με σύμφωνα με το μέγεθος του buffer
        .read(bufferSize) διαβάζει τα τρέχοντα bufferSize bytes και στην συνέχεια δηλώνει
        ως τρέχοντα bytes τα επόμενα bufferSize.